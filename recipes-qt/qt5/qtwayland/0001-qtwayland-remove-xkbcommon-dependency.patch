diff --git a/src/client/client.pro b/src/client/client.pro
index eae7ad5..299c870 100644
--- a/src/client/client.pro
+++ b/src/client/client.pro
@@ -15,9 +15,6 @@ use_gold_linker: CONFIG += no_linker_version_script
 CONFIG -= precompile_header
 CONFIG += link_pkgconfig wayland-scanner
 
-qtConfig(xkbcommon-evdev): \
-    QMAKE_USE_PRIVATE += xkbcommon_evdev
-
 QMAKE_USE += wayland-client
 
 INCLUDEPATH += $$PWD/../shared
diff --git a/src/compositor/compositor.pro b/src/compositor/compositor.pro
index dc9000d..a1eb8bd 100644
--- a/src/compositor/compositor.pro
+++ b/src/compositor/compositor.pro
@@ -32,3 +32,5 @@ include ($$PWD/extensions/extensions.pri)
 MODULE_PLUGIN_TYPES = \
     wayland-graphics-integration-server
 load(qt_module)
+
+#LIBS += -lxkbcommon
diff --git a/src/compositor/compositor_api/qwaylandkeyboard.cpp b/src/compositor/compositor_api/qwaylandkeyboard.cpp
index c30f7b1..e6f1a0b 100644
--- a/src/compositor/compositor_api/qwaylandkeyboard.cpp
+++ b/src/compositor/compositor_api/qwaylandkeyboard.cpp
@@ -349,12 +349,6 @@ void QWaylandKeyboardPrivate::createXKBState(xkb_keymap *keymap)
     xkb_state = xkb_state_new(keymap);
 }
 
-uint QWaylandKeyboardPrivate::toWaylandXkbV1Key(const uint nativeScanCode)
-{
-    const uint offset = 8;
-    Q_ASSERT(nativeScanCode >= offset);
-    return nativeScanCode - offset;
-}
 
 void QWaylandKeyboardPrivate::createXKBKeymap()
 {
@@ -384,6 +378,13 @@ void QWaylandKeyboardPrivate::createXKBKeymap()
 }
 #endif
 
+uint QWaylandKeyboardPrivate::toWaylandXkbV1Key(const uint nativeScanCode)
+{
+    const uint offset = 8;
+    Q_ASSERT(nativeScanCode >= offset);
+    return nativeScanCode - offset;
+}
+
 void QWaylandKeyboardPrivate::sendRepeatInfo()
 {
     Q_FOREACH (Resource *resource, resourceMap()) {
diff --git a/src/compositor/wayland_wrapper/wayland_wrapper.pri b/src/compositor/wayland_wrapper/wayland_wrapper.pri
index e19ea25..3bb301f 100644
--- a/src/compositor/wayland_wrapper/wayland_wrapper.pri
+++ b/src/compositor/wayland_wrapper/wayland_wrapper.pri
@@ -30,5 +30,3 @@ qtConfig(wayland-datadevice) {
 
 INCLUDEPATH += wayland_wrapper
 
-qtConfig(xkbcommon-evdev): \
-    QMAKE_USE += xkbcommon_evdev
diff --git a/src/plugins/shellintegration/ivi-shell/ivi-shell.pro b/src/plugins/shellintegration/ivi-shell/ivi-shell.pro
index ba716c1..1bb9af9 100644
--- a/src/plugins/shellintegration/ivi-shell/ivi-shell.pro
+++ b/src/plugins/shellintegration/ivi-shell/ivi-shell.pro
@@ -3,9 +3,6 @@ CONFIG += wayland-scanner
 
 QMAKE_USE += wayland-client
 
-qtConfig(xkbcommon-evdev): \
-    QMAKE_USE += xkbcommon_evdev
-
 WAYLANDCLIENTSOURCES += \
     ../../../3rdparty/protocol/ivi-application.xml \
     ../../../3rdparty/protocol/ivi-controller.xml
diff --git a/tests/auto/compositor/compositor/compositor.pro b/tests/auto/compositor/compositor/compositor.pro
index 112e2e7..d9acac3 100644
--- a/tests/auto/compositor/compositor/compositor.pro
+++ b/tests/auto/compositor/compositor/compositor.pro
@@ -7,9 +7,6 @@ QT += core-private gui-private waylandcompositor waylandcompositor-private
 
 QMAKE_USE += wayland-client wayland-server
 
-qtConfig(xkbcommon-evdev)
-    QMAKE_USE += xkbcommon_evdev
-
 WAYLANDCLIENTSOURCES += \
             ../../../../src/3rdparty/protocol/xdg-shell.xml \
             ../../../../src/3rdparty/protocol/ivi-application.xml \
